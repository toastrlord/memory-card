{"version":3,"sources":["components/Card.js","components/Score.js","App.js","index.js"],"names":["Card","props","className","onClick","onCardClicked","src","imgSource","alt","title","Score","currentScore","highScore","images","names","cardIDs","App","state","cardsClicked","cards","increaseScore","bind","resetScore","clickCard","a","this","randomizeCards","setState","cardsCopy","map","v","newCards","length","index","Math","round","random","push","splice","cardID","includes","parseInt","concat","value","id","toString","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAWeA,MATf,SAAcC,GACV,OACI,sBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,iBAA3C,UACI,qBAAKC,IAAKJ,EAAMK,UAAWC,IAAI,KAC/B,mBAAGL,UAAU,mBAAb,SAAiCD,EAAMO,YCGpCC,MATf,SAAeR,GACX,OACI,sBAAKC,UAAU,kBAAf,UACI,sBAAKA,UAAU,aAAf,4BAA4CD,EAAMS,gBAClD,sBAAKR,UAAU,aAAf,yBAAyCD,EAAMU,iBCArDC,EAAS,CACb,EAAK,WACL,EAAK,YACL,EAAK,UACL,EAAK,aACL,EAAK,OACL,EAAK,UACL,EAAK,cAGDC,EAAQ,CACZ,EAAK,4BACL,EAAK,mBACL,EAAK,yBACL,EAAK,0BACL,EAAK,yBACL,EAAK,wBACL,EAAK,mCAGDC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAkFpBC,E,kDA/Eb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAEDe,MAAQ,CACXL,UAAW,EACXD,aAAc,EACdO,aAAc,GACdC,MAAOJ,GAGT,EAAKK,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAZA,E,4FAenB,sBAAAG,EAAA,sDACEC,KAAKC,iBADP,gD,iFAIA,WACMD,KAAKR,MAAMN,cAAgBc,KAAKR,MAAML,UACxCa,KAAKE,SAAS,CACZhB,aAAcc,KAAKR,MAAMN,aAAe,EACxCC,UAAWa,KAAKR,MAAMN,aAAe,IAGvCc,KAAKE,SAAS,CACZhB,aAAcc,KAAKR,MAAMN,aAAe,M,wBAK9C,WACEc,KAAKE,SAAS,CACZhB,aAAc,EACdO,aAAc,O,4BAIlB,WAGE,IAFA,IAAMU,EAAYb,EAAQc,KAAI,SAAAC,GAAC,OAAIA,KAC/BC,EAAW,GACRH,EAAUI,QAAU,GAAG,CAC5B,IAAMC,EAAQC,KAAKC,MAAMD,KAAKE,UAAYR,EAAUI,OAAS,IAC7DD,EAASM,KAAKT,EAAUU,OAAOL,EAAO,IAExCR,KAAKE,SAAS,CACZR,MAAOY,M,uBAIX,SAAUQ,GACJd,KAAKR,MAAMC,aAAasB,SAASC,SAASF,EAAQ,KACpDd,KAAKH,cAELG,KAAKE,SAAS,CACZT,aAAcO,KAAKR,MAAMC,aAAawB,OAAOH,KAE/Cd,KAAKL,iBAEPK,KAAKC,mB,oBAGP,WAAU,IAAD,SACkCD,KAAKR,MAAvCN,EADA,EACAA,aAAcC,EADd,EACcA,UAAWO,EADzB,EACyBA,MAChC,OAAQ,gCACR,mCACE,qBAAKb,IAAI,sBAAsBE,IAAI,KACnC,mBAAGL,UAAU,oBAAb,4FACA,cAAC,EAAD,CAAOQ,aAAcA,EAAcC,UAAWA,OAEhD,qBAAKT,UAAU,iBAAf,SAAiCgB,EAAMU,KAAI,SAAAc,GACzC,OAAO,cAAC,EAAD,CAAMlC,MAAOK,EAAM6B,GAAQC,GAAID,EAA8BtC,cAAe,kBAAM,EAAKkB,UAAUoB,IAAQpC,UAAW,UAAYM,EAAO8B,GAAS,QAArGA,EAAME,wB,GAzE5CC,aCtBlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f7ec7815.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card(props) {\n    return (\n        <div className='card' onClick={() => props.onCardClicked()}>\n            <img src={props.imgSource} alt='' />\n            <p className='card-description'>{props.title}</p>\n        </div>\n    )\n}\n\nexport default Card;","function Score(props) {\n    return (\n        <div className='score-container'>\n            <div className='score-text'>Current Score: {props.currentScore}</div>\n            <div className='score-text'>High Score: {props.highScore}</div>\n        </div>\n    )\n}\n\nexport default Score;","import Card from './components/Card';\nimport Score from './components/Score';\nimport {Component} from 'react';\n\nconst images = {\n  '1': 'balmoral',\n  '2': 'bloodhawk',\n  '3': 'brigand',\n  '4': 'devastator',\n  '5': 'fury',\n  '6': 'kestrel',\n  '7': 'peacemaker'\n}\n\nconst names = {\n  '1': 'Bristol Type 140 Balmoral',\n  '2': 'Hughes Bloodhawk',\n  '3': 'Fairchild F611 Brigand',\n  '4': 'Hughes P21-J Devastator',\n  '5': 'Curtiss-Wright J2 Fury',\n  '6': 'McDonnell S2B Kestrel',\n  '7': 'William and Colt Peacemaker 370'\n}\n\nconst cardIDs = [1, 2, 3, 4, 5, 6, 7];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      highScore: 0,\n      currentScore: 0,\n      cardsClicked: [],\n      cards: cardIDs,\n    }\n\n    this.increaseScore = this.increaseScore.bind(this);\n    this.resetScore = this.resetScore.bind(this);\n    this.clickCard = this.clickCard.bind(this);\n  }\n\n  async componentDidMount() {\n    this.randomizeCards();\n  }\n\n  increaseScore() {\n    if (this.state.currentScore >= this.state.highScore) {\n      this.setState({\n        currentScore: this.state.currentScore + 1,\n        highScore: this.state.currentScore + 1\n      });\n    } else {\n      this.setState({\n        currentScore: this.state.currentScore + 1\n      });\n    }\n  }\n\n  resetScore() {\n    this.setState({\n      currentScore: 0,\n      cardsClicked: [],\n    });\n  }\n\n  randomizeCards() {\n    const cardsCopy = cardIDs.map(v => v);\n    let newCards = [];\n    while (cardsCopy.length >= 1) {\n      const index = Math.round(Math.random() * (cardsCopy.length - 1));\n      newCards.push(cardsCopy.splice(index, 1));\n    }\n    this.setState({\n      cards: newCards,\n    });\n  }\n\n  clickCard(cardID) {\n    if (this.state.cardsClicked.includes(parseInt(cardID, 10))) {\n      this.resetScore();\n    } else {\n      this.setState({\n        cardsClicked: this.state.cardsClicked.concat(cardID),\n      });\n      this.increaseScore();\n    }\n    this.randomizeCards();\n  }\n\n  render() {\n    const {currentScore, highScore, cards} = this.state;\n    return (<div>\n    <header>\n      <img src='images/cs title.png' alt=''/>\n      <p className='instructions-text'>Increase your score by clicking a plane, but don't click the same plane twice!</p>\n      <Score currentScore={currentScore} highScore={highScore}/>\n    </header>\n    <div className='card-container'>{cards.map(value => {\n      return <Card title={names[value]} id={value} key={value.toString()} onCardClicked={() => this.clickCard(value)} imgSource={'images/' + images[value] + '.png'}/>;\n    })}</div>\n    </div>);\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}